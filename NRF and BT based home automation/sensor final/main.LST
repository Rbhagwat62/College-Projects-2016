C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<P89v51Rx2.h>
   2          #include<delay.h>
   3          #include<spi.h>
   4          #include<RF24.h>
   5          //#include<USART.h>
   6          #include<I2C.h>
   7          
   8          void Init();
   9          
  10          sbit CE =P1^0;
  11          sbit CSN=P1^4;
  12          sbit IRQ=P3^3;
  13          
  14          sbit sw1=P2^3;
  15          sbit sen=P2^1;
  16          
  17           
  18          
  19           
  20          
  21          
  22          sbit MISO=P1^6;
  23          sbit MOSI=P1^5;
  24          sbit SCK=P1^7;
  25          
  26          bit flag=0,st=0;
  27          bit sensed=0,seet=0; 
  28          //void transmit1(char)
  29          unsigned char char_dec(char,char);
  30          void EEEP();
  31          //void transmit1(unsigned char da);
  32          
  33          
  34          
  35          //int data_in[16];
  36          //int rx_data[16],
  37          unsigned char rx,teem[11],rc=0;
  38          unsigned char eep[5];
  39          //unsigned char defval[5]={0xE7,0xE7,0xE7,0xE7,0xE7};
  40          unsigned char newaddrs[5];
  41          //unsigned char data_in[10],rx_data[10];
  42          
  43          external0_int() interrupt 2 
  44          {
  45   1       unsigned char i;
  46   1        
  47   1      write_byt_addrs(0x07,0x40);
  48   1      IE1=0;
  49   1      //SerialPrint(rc);
  50   1      
  51   1      //USART_puts("\nint occured");
  52   1      rx=receive();
  53   1      teem[rc]=rx;
  54   1              if(rx=='S')
  55   1              {rc=0;
C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 2   

  56   2              //sensed=1;
  57   2              //USART_putc(rx);
  58   2              transmit(rx);
  59   2              transmit('A');
  60   2              }
  61   1      
  62   1              if(rx=='G')                       //system arm if receive G on nrf
  63   1              {seet=1;
  64   2              sensed=1;
  65   2              //USART_puts("sys ARM seet=");
  66   2              //SerialPrint(seet);
  67   2              //USART_puts("sensed");
  68   2              //SerialPrint(sensed);
  69   2              
  70   2              }
  71   1      
  72   1                      if(rx=='D')                                             //system disarm if receives D on nrf
  73   1                      {//USART_puts("sys DRM  seet=");
  74   2                      sensed=0;
  75   2                      //SerialPrint(seet);
  76   2                      //USART_puts("sensed");
  77   2                      //SerialPrint(sensed); 
  78   2                      }
  79   1      
  80   1      if((rc==10)&&(teem[rc]=='T'))
  81   1                {     //USART_puts("\n the received string is");
  82   2                      for(i=0;i<11;i++)
  83   2                      //USART_putc(teem[i]);
  84   2                      //USART_puts("\n in int");
  85   2                      EEEP();
  86   2                      rc=0;
  87   2                      //USART_putc('f');
  88   2                }
  89   1                else
  90   1                if(rx!='S')
  91   1                rc++;
  92   1      //SerialPrint(rc);
  93   1      //USART_putc(rx);
  94   1      transmit(rx);
  95   1      
  96   1      } 
  97          
  98          void receive_byt()
  99          {  unsigned char teem;
 100   1              if(RI==1)
 101   1               {teem=SBUF;
 102   2               RI=0;
 103   2               transmit(teem);}
 104   1      }
 105          /*void transmit1(unsigned char da)
 106          {
 107          unsigned char i;
 108                  for(i=0;i<9;i++)
 109                  {
 110                  transmit(da);
 111                  delay(100);
 112                  if(rx=='#')
 113                  i=10;
 114                  }
 115          } */
 116          
 117          void EEEP()
C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 3   

 118          {       unsigned char i,j=0;
 119   1              //short int temp;
 120   1              // USART_puts("\n in eep fun");
 121   1                      
 122   1              
 123   1                      for(i=0;i<10;i=i+2)
 124   1                      { //USART_puts("\n in eeep");
 125   2                      eep[j]=char_dec(teem[i],teem[i+1]);
 126   2                      j++;
 127   2      
 128   2                      //Write_I2C((i+2),eep);
 129   2                      }
 130   1              
 131   1              /*for(i=0;i<10;i=i+2)
 132   1                      {
 133   1                      temp=Read_I2C(i+2);
 134   1                      USART_puts("val");
 135   1                      SerialPrint(temp);
 136   1                      }*/
 137   1                      /*for(j=0;j<5;j++)
 138   1                      {USART_puts(" ");
 139   1                      SerialPrint(eep[j]);
 140   1                       }*/
 141   1      
 142   1                      Write_I2C(1,eep[0]);
 143   1                      Write_I2C(2,15);
 144   1                      Write_I2C(3,eep[1]);
 145   1                      Write_I2C(4,15);
 146   1                      Write_I2C(5,eep[2]);
 147   1                      Write_I2C(6,15);
 148   1                      Write_I2C(7,eep[3]);
 149   1                      Write_I2C(8,15);
 150   1                      Write_I2C(9,eep[4]);
 151   1      
 152   1                      //USART_puts("\n data in EProm");
 153   1                      j=0;
 154   1                      for(i=1;i<10;i=i+2)
 155   1                      {//USART_puts(" ");
 156   2                      newaddrs[j]=(Read_I2C(i));
 157   2                      //SerialPrint(newaddrs[j]);
 158   2                      j++;
 159   2                      }
 160   1                              
 161   1      
 162   1      }
 163          
 164          unsigned char char_dec(char a,char b)
 165          {
 166   1      unsigned char x,y,temp;
 167   1              
 168   1              if((a>='0')&&(a<='9'))
 169   1              x=a-'0';
 170   1      
 171   1              if((a>='A')&&(a<='F'))
 172   1              x=a-'A'+10;
 173   1              
 174   1      
 175   1              if((b>='0')&&(b<='9'))
 176   1                y=b-'0';
 177   1      
 178   1              if((b>='A')&&(b<='F'))
 179   1                y=b-'A'+10;
C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 4   

 180   1                
 181   1              
 182   1               x=x<<4;
 183   1               x=x&0xf0;
 184   1               
 185   1      
 186   1               y=y&0x0f;
 187   1               temp=(x|y);
 188   1               //SerialPrint(temp);
 189   1               return(temp);
 190   1      }
 191          
 192          
 193          /*void transmit1(unsigned char text)
 194          {
 195          char i;
 196          for(i=0;i<10;i++)
 197            {              transmit(text);
 198                          delay(50);
 199          
 200                          if(rx==text)
 201                          i=10;
 202          
 203                          if(i==9)
 204                          USART_puts("fail to tansmit");
 205                  }
 206                  rx=0;
 207          } */
 208          
 209          void main()                                                        /////////main
 210          {
 211   1                unsigned char i,j;
 212   1              
 213   1      //      USART_puts("\n the main loop");
 214   1              Init();
 215   1              
 216   1              write_byt_addrs(0x00,0x3B);
 217   1              write_byt_addrs(0x01,0x00);
 218   1              write_byt_addrs(0x02,0x03);
 219   1              write_byt_addrs(0x11,0x01);
 220   1              write_byt_addrs(0x12,0x01);
 221   1              write_byt_addrs(0x05,0x02);
 222   1              write_byt_addrs(0x06,0x26);
 223   1              //write_addrs(0x10);
 224   1      
 225   1              read_byt_addrs(0x00,1);
 226   1              
 227   1              CSN=0;
 228   1              spiWrite(0xE1);
 229   1              CSN=1;
 230   1              CSN=0;
 231   1              spiWrite(0xE2);
 232   1              CSN=1;
 233   1      
 234   1          //USART_puts("\n please enter text");
 235   1              
 236   1              j=0     ;
 237   1              for(i=1;i<10;i=i+2)
 238   1                      {
 239   2                      newaddrs[j]=(Read_I2C(i));
 240   2                      j++;
 241   2                      }       
C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 5   

 242   1                      //USART_puts("delay start");
 243   1                      delay_ms(7000);                 
 244   1                      //USART_puts("delay end");
 245   1                      write_byt_rxd();
 246   1              while(1)
 247   1              {                // USART_puts("\nwhile loop");
 248   2                              if(sw1==0)
 249   2                                      {//USART_puts("sw is zero");
 250   3      //                              led0=1;
 251   3                                      flag=1;
 252   3                                      }
 253   2                                else
 254   2                                      {
 255   3                                      //USART_puts("switch is 1");
 256   3                                      //led0=0;
 257   3                                      flag=0;
 258   3                              //      st=0;
 259   3                                      }
 260   2                              if((flag==1)&&(st==0))
 261   2                              {byt_write1();
 262   3                              //USART_puts("\n default value");
 263   3                              read_byt_addrs(0x10,5);
 264   3                              st=1;}
 265   2      
 266   2                              else if((flag==0)&&(st==1))
 267   2                              {byt_write(0x10,newaddrs);
 268   3                              //USART_puts("setting new value");
 269   3                              read_byt_addrs(0x10,5);
 270   3                              st=0;
 271   3                              flag=1;}  
 272   2      
 273   2                              if((sen==0)&&(sensed==1))
 274   2                              {
 275   3                              //USART_puts("in if");
 276   3                              if(seet==1)
 277   3                              {seet=0;
 278   4                                              for(i=0;i<9;i++)
 279   4                                                      {
 280   5                                                      transmit('X');
 281   5                                                      delay(100);
 282   5                                                      if(rx=='#')
 283   5                                                      i=10;
 284   5                                                      }
 285   4                                              
 286   4      
 287   4                              //USART_puts("sensed");
 288   4                              }
 289   3                              }
 290   2      
 291   2                                                                              
 292   2                              
 293   2                              receive_byt();                  
 294   2              }
 295   1      }
 296          
 297          
 298          
 299          
 300          
 301          
 302          void Init()
 303          {
C51 COMPILER V9.02   MAIN                                                                  02/12/2015 12:19:18 PAGE 6   

 304   1      USART_Init();
*** WARNING C206 IN LINE 304 OF MAIN.C: 'USART_Init': missing function-prototype
 305   1      CE=1;
 306   1      CSN=1;
 307   1      MOSI=0;
 308   1      MISO=1;
 309   1      SCK=0;
 310   1      sen=1;
 311   1      SPCTL=0xD0;
 312   1      IEN0=0x94;
 313   1      IP0H=0x04;
 314   1      //led=0;
 315   1      IRQ=1;
 316   1      //USART_puts("\ninitializing");
 317   1      }
 318          
 319          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    856    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
