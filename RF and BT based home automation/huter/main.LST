C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<P89v51Rx2.h>
   2          #include<delay.h>
   3          #include<spi.h>
   4          #include<RF24.h>
   5          #include<USART.h>
   6          #include<I2C.h>
   7          
   8          void Init();
   9          
  10          sbit CE =P1^0;
  11          sbit CSN=P1^4;
  12          sbit IRQ=P3^3;
  13          
  14          sbit sw1=P2^3;
  15          
  16          
  17          
  18          
  19           sbit led0 =P0^0;
  20          
  21          
  22          sbit MISO=P1^6;
  23          sbit MOSI=P1^5;
  24          sbit SCK=P1^7;
  25          sbit hut=P2^7;
  26          
  27          bit flag=0,st=0;
  28          bit on=0;
  29          //void transmit1(char)
  30          unsigned char char_dec(char,char);
  31          void EEEP();
  32          //void transmit1(unsigned char da);
  33          
  34          
  35          
  36          //int data_in[16];
  37          //int rx_data[16],
  38          unsigned char rx,teem[11],rc=0;
  39          unsigned char eep[5];
  40          //unsigned char defval[5]={0xE7,0xE7,0xE7,0xE7,0xE7};
  41          unsigned char newaddrs[5];
  42          //unsigned char data_in[10],rx_data[10];
  43          
  44          external0_int() interrupt 2 
  45          {
  46   1       unsigned char i;
  47   1        
  48   1       write_byt_addrs(0x07,0x40);
  49   1      IE1=0;
  50   1      SerialPrint(rc);
  51   1      
  52   1      //USART_puts("\nint occured");
  53   1      rx=receive();
  54   1      teem[rc]=rx;
  55   1      if(rx=='S')
C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 2   

  56   1      {rc=0;
  57   2      on=1;
  58   2      USART_putc(rx);
  59   2      transmit(rx);
  60   2      transmit('A');
  61   2      }
  62   1      
  63   1      if(rx=='D')
  64   1      {on=0;
  65   2      hut=0;
  66   2      }
  67   1      
  68   1      if((rc==10)&&(teem[rc]=='T'))
  69   1                {     USART_puts("\n the received string is");
  70   2                      for(i=0;i<11;i++)
  71   2                      USART_putc(teem[i]);
  72   2                      USART_puts("\n in int");
  73   2                      EEEP();
  74   2                      rc=0;
  75   2                      //USART_putc('f');
  76   2                }
  77   1                else
  78   1                if(rx!='S')
  79   1                rc++;
  80   1      //SerialPrint(rc);
  81   1      USART_putc(rx);
  82   1      transmit(rx);
  83   1      
  84   1      } 
  85          
  86          void receive_byt()
  87          {  unsigned char teem;
  88   1              if(RI==1)
  89   1               {teem=SBUF;
  90   2               RI=0;
  91   2               transmit(teem);}
  92   1      }
  93          /*void transmit1(unsigned char da)
  94          {
  95          unsigned char i;
  96                  for(i=0;i<9;i++)
  97                  {
  98                  transmit(da);
  99                  if(rx=='#')
 100                  i=10;
 101                  }
 102          }       */
 103          
 104          void EEEP()
 105          {       unsigned char i,j=0;
 106   1              //short int temp;
 107   1              // USART_puts("\n in eep fun");
 108   1                      
 109   1              
 110   1                      for(i=0;i<10;i=i+2)
 111   1                      { USART_puts("\n in eeep");
 112   2                      eep[j]=char_dec(teem[i],teem[i+1]);
 113   2                      j++;
 114   2      
 115   2                      //Write_I2C((i+2),eep);
 116   2                      }
 117   1              
C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 3   

 118   1              /*for(i=0;i<10;i=i+2)
 119   1                      {
 120   1                      temp=Read_I2C(i+2);
 121   1                      USART_puts("val");
 122   1                      SerialPrint(temp);
 123   1                      }*/
 124   1                      /*for(j=0;j<5;j++)
 125   1                      {USART_puts(" ");
 126   1                      SerialPrint(eep[j]);
 127   1                       }*/
 128   1      
 129   1                      Write_I2C(1,eep[0]);
 130   1                      Write_I2C(2,15);
 131   1                      Write_I2C(3,eep[1]);
 132   1                      Write_I2C(4,15);
 133   1                      Write_I2C(5,eep[2]);
 134   1                      Write_I2C(6,15);
 135   1                      Write_I2C(7,eep[3]);
 136   1                      Write_I2C(8,15);
 137   1                      Write_I2C(9,eep[4]);
 138   1      
 139   1                      USART_puts("\n data in EProm");
 140   1                      j=0;
 141   1                      for(i=1;i<10;i=i+2)
 142   1                      {USART_puts(" ");
 143   2                      newaddrs[j]=(Read_I2C(i));
 144   2                      SerialPrint(newaddrs[j]);
 145   2                      j++;
 146   2                      }
 147   1                              
 148   1      
 149   1      }
 150          
 151          unsigned char char_dec(char a,char b)
 152          {
 153   1      unsigned char x,y,temp;
 154   1              
 155   1              if((a>='0')&&(a<='9'))
 156   1              x=a-'0';
 157   1      
 158   1              if((a>='A')&&(a<='F'))
 159   1              x=a-'A'+10;
 160   1              
 161   1      
 162   1              if((b>='0')&&(b<='9'))
 163   1                y=b-'0';
 164   1      
 165   1              if((b>='A')&&(b<='F'))
 166   1                y=b-'A'+10;
 167   1                
 168   1              
 169   1               x=x<<4;
 170   1               x=x&0xf0;
 171   1               
 172   1      
 173   1               y=y&0x0f;
 174   1               temp=(x|y);
 175   1               SerialPrint(temp);
 176   1               return(temp);
 177   1      }
 178          
 179          
C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 4   

 180          /*void transmit1(unsigned char text)
 181          {
 182          char i;
 183          for(i=0;i<10;i++)
 184            {              transmit(text);
 185                          delay(50);
 186          
 187                          if(rx==text)
 188                          i=10;
 189          
 190                          if(i==9)
 191                          USART_puts("fail to tansmit");
 192                  }
 193                  rx=0;
 194          } */
 195          
 196          void main()                                                        /////////main
 197          {
 198   1                unsigned char i,j;
 199   1              
 200   1      //      USART_puts("\n the main loop");
 201   1              Init();
 202   1              
 203   1              write_byt_addrs(0x00,0x3B);
 204   1              write_byt_addrs(0x01,0x00);
 205   1              write_byt_addrs(0x02,0x03);
 206   1              write_byt_addrs(0x11,0x01);
 207   1              write_byt_addrs(0x12,0x01);
 208   1              write_byt_addrs(0x05,0x02);
 209   1              write_byt_addrs(0x06,0x26);
 210   1              //write_addrs(0x10);
 211   1      
 212   1              read_byt_addrs(0x00,1);
 213   1              
 214   1              CSN=0;
 215   1              spiWrite(0xE1);
 216   1              CSN=1;
 217   1              CSN=0;
 218   1              spiWrite(0xE2);
 219   1              CSN=1;
 220   1              write_byt_addrs(0x0A,0x10);
 221   1              read_byt_addrs(0x0A,5);
 222   1              
 223   1      
 224   1              byt_write2();
 225   1              read_byt_addrs(0x0B,5);
 226   1      
 227   1          USART_puts("\n please enter text");
 228   1              
 229   1              j=0     ;
 230   1              for(i=1;i<10;i=i+2)
 231   1                      {
 232   2                      newaddrs[j]=(Read_I2C(i));
 233   2                      j++;
 234   2                      }                                                                                
 235   1              while(1)
 236   1              {                // USART_puts("\nwhile loop");
 237   2                              if(sw1==0)
 238   2                                      {//USART_puts("sw is zero");
 239   3                                      led0=1;
 240   3                                      flag=1;
 241   3                                      }
C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 5   

 242   2                                else
 243   2                                      {
 244   3                                      //USART_puts("switch is 1");
 245   3                                      led0=0;
 246   3                                      flag=0;
 247   3                              //      st=0;
 248   3                                      }
 249   2                              if((flag==1)&&(st==0))
 250   2                              {byt_write1();
 251   3                              USART_puts("\n default value");
 252   3                              read_byt_addrs(0x10,5);
 253   3                              st=1;}
 254   2      
 255   2                              else if((flag==0)&&(st==1))
 256   2                              {byt_write(0x10,newaddrs);
 257   3                              USART_puts("setting new value");
 258   3                              read_byt_addrs(0x10,5);
 259   3                              st=0;
 260   3                              flag=1;}  
 261   2      
 262   2                              if((rx=='X')&&(on==1))
 263   2                              {
 264   3                              //transmit1('O');
 265   3                              hut=1;
 266   3                      
 267   3                              }
 268   2      
 269   2                                                                              
 270   2                              
 271   2                              receive_byt();                  
 272   2              }
 273   1      }
 274          
 275          
 276          
 277          
 278          
 279          
 280          void Init()
 281          {
 282   1      USART_Init();
 283   1      CE=1;
 284   1      CSN=1;
 285   1      MOSI=0;
 286   1      MISO=1;
 287   1      SCK=0;
 288   1      SPCTL=0xD0;
 289   1      IEN0=0x94;
 290   1      IP0H=0x04;
 291   1      hut=0;
 292   1      //led=0;
 293   1      IRQ=1;
 294   1      USART_puts("\ninitializing");
 295   1      }
 296          
 297          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    972    ----
   CONSTANT SIZE    =    130    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.02   MAIN                                                                  12/16/2014 16:11:09 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
